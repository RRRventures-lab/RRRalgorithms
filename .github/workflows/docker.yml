name: Docker Build

on:
  push:
    branches: [main, master]
    tags:
      - 'v*'
  pull_request:
    branches: [main, master]

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - neural-network
          - data-pipeline
          - trading-engine
          - risk-management
          - backtesting
          - monitoring

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub (if pushing)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: rrrventures/rrralgos-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./worktrees/${{ matrix.service }}
          file: ./worktrees/${{ matrix.service }}/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-compose-test:
    name: Test Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat > config/api-keys/.env << EOF
          SUPABASE_URL=https://test.supabase.co
          SUPABASE_SERVICE_KEY=test_key
          DATABASE_URL=postgresql://test:test@localhost/test
          POLYGON_API_KEY=test_key
          PERPLEXITY_API_KEY=test_key
          ANTHROPIC_API_KEY=test_key
          COINBASE_API_KEY=test_key
          COINBASE_API_SECRET=test_secret
          PAPER_TRADING=true
          LIVE_TRADING=false
          EOF

      - name: Validate docker-compose.yml
        run: |
          docker-compose config

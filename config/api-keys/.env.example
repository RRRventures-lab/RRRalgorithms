# =============================================================================
# RRRalgorithms API Keys Configuration - EXAMPLE FILE
# =============================================================================
# This file contains example/placeholder values for all required configuration
# DO NOT put real API keys in this file - use secrets management instead
# =============================================================================

# ============================================================================
# Market Data APIs
# ============================================================================

# Polygon.io (Individual Stock Developer + Currencies Starter)
# Get your key at: https://polygon.io/dashboard/api-keys
POLYGON_API_KEY=your_polygon_api_key_here
POLYGON_RATE_LIMIT=100  # Currencies Starter: 100 req/sec

# Perplexity AI (Max Plan - Unlimited)
# Get your key at: https://www.perplexity.ai/settings/api
PERPLEXITY_API_KEY=your_perplexity_api_key_here
CACHE_TTL=300

# Anthropic Claude (Max Plan)
# Get your key at: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ============================================================================
# Supabase (Cloud PostgreSQL + Real-time)
# ============================================================================

# Supabase Project URL
# Format: https://[project-id].supabase.co
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Anon Key (public client access)
# Get from: https://supabase.com/dashboard/project/[project-id]/settings/api
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Supabase Service Role Key (admin access - keep secure!)
# Get from: https://supabase.com/dashboard/project/[project-id]/settings/api
SUPABASE_SERVICE_KEY=your_supabase_service_role_key_here

# Supabase Database Connection URL
# Format: postgresql://postgres.[project-id]:[password]@[host]:[port]/postgres
SUPABASE_DB_URL=postgresql://postgres.your-project:your-password@aws-0-us-west-1.pooler.supabase.com:6543/postgres

# Alternative DATABASE_URL (same as SUPABASE_DB_URL)
DATABASE_URL=postgresql://postgres.your-project:your-password@aws-0-us-west-1.pooler.supabase.com:6543/postgres

# ============================================================================
# Cache & Message Queue
# ============================================================================

# Redis (Local - for caching and pub/sub)
REDIS_URL=redis://localhost:6379/0

# ============================================================================
# Exchange APIs (for live trading - optional)
# ============================================================================

# Coinbase
# Get from: https://portal.cdp.coinbase.com/
COINBASE_API_KEY=your_coinbase_api_key_here
COINBASE_API_SECRET=your_coinbase_private_key_here

# Binance
# Get from: https://www.binance.com/en/my/settings/api-management
BINANCE_API_KEY=your_binance_api_key
BINANCE_API_SECRET=your_binance_api_secret

# Kraken
# Get from: https://www.kraken.com/u/security/api
KRAKEN_API_KEY=your_kraken_api_key
KRAKEN_API_SECRET=your_kraken_api_secret

# ============================================================================
# Development Tools
# ============================================================================

# GitHub Personal Access Token
# Generate at: https://github.com/settings/tokens
# Scopes needed: repo, read:org
GITHUB_TOKEN=your_github_personal_access_token

# MLflow Tracking Server
MLFLOW_TRACKING_URI=http://localhost:5000

# Weights & Biases
# Get from: https://wandb.ai/settings
WANDB_API_KEY=your_wandb_api_key

# ============================================================================
# Monitoring & Alerting
# ============================================================================

# Sentry (Error tracking)
# Get from: https://sentry.io/settings/
SENTRY_DSN=your_sentry_dsn

# Slack Webhook (for alerts)
# Get from: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# PagerDuty (for critical alerts)
# Get from: https://support.pagerduty.com/docs/api-access-keys
PAGERDUTY_API_KEY=your_pagerduty_api_key

# ============================================================================
# Security
# ============================================================================

# JWT Secret for internal APIs
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(64))"
JWT_SECRET=generate_a_random_64_byte_secret_here

# Encryption key for sensitive data (32 bytes hex)
# Generate with: python3 -c "import secrets; print(secrets.token_hex(32))"
ENCRYPTION_KEY=generate_a_random_32_byte_hex_key_here

# ============================================================================
# Application Configuration
# ============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Project root directory
PROJECT_ROOT=/Volumes/Lexar/RRRVentures/RRRalgorithms

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable debug mode (true/false)
DEBUG=true

# ============================================================================
# Risk Management
# ============================================================================

# Maximum position size (% of portfolio)
MAX_POSITION_SIZE=0.20

# Maximum daily loss (% of portfolio)
MAX_DAILY_LOSS=0.05

# Maximum portfolio volatility target
MAX_PORTFOLIO_VOLATILITY=0.25

# ============================================================================
# Feature Flags
# ============================================================================

# Enable paper trading mode (true/false)
PAPER_TRADING=true

# Enable live trading (DANGER: only set to true when ready!)
LIVE_TRADING=false

# Enable sentiment analysis
ENABLE_SENTIMENT=true

# Enable quantum optimization
ENABLE_QUANTUM_OPTIMIZATION=false

# Enable multi-agent decision system
ENABLE_MULTI_AGENT=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Fill in your actual API keys in .env
#
# 3. Run the migration script to move secrets to Keychain:
#    python scripts/security/migrate_secrets.py --remove-plaintext
#
# 4. Update your code to use SecretsManager:
#    from security.secrets_manager import SecretsManager
#    secrets = SecretsManager()
#    api_key = secrets.get_secret('POLYGON_API_KEY')
#
# 5. NEVER commit .env to git (it's in .gitignore)
#
# =============================================================================
